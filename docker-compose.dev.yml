services:
  # MongoDB Service for Development
  mongodb-dev:
    image: mongo:7.0
    container_name: taskflow-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: devpassword
      MONGO_INITDB_DATABASE: taskflow_dev
    volumes:
      - mongodb_dev_data:/data/db
      - mongodb_dev_config:/data/configdb
    networks:
      - taskflow-dev-network
    # healthcheck:
    #   test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s

  # Next.js Development Server
  taskflow-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: taskflow-nextjs-dev
    restart: unless-stopped
    ports:
      - "9002:9002" # Using the port from package.json dev script
    environment:
      # Database Configuration
      DB_TYPE: mongodb
      MONGODB_URI: mongodb://admin:devpassword@mongodb-dev:27017/taskflow_dev?authSource=admin
      MONGODB_HOST: mongodb-dev
      MONGODB_PORT: 27017
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: devpassword
      MONGODB_DATABASE: taskflow_dev
      MONGODB_TASKS_COLLECTION: tasks_dev
      MONGODB_TEMPLATES_COLLECTION: templates_dev
      MONGODB_DAILY_PLANS_COLLECTION: dailyPlans_dev
      # Next.js Development Configuration
      NODE_ENV: development
      HOSTNAME: 0.0.0.0
      PORT: 9002
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    # depends_on:
    #   mongodb-dev:
    #     condition: service_healthy
    networks:
      - taskflow-dev-network

volumes:
  mongodb_dev_data:
    driver: local
  mongodb_dev_config:
    driver: local

networks:
  taskflow-dev-network:
    driver: bridge
